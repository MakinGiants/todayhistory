apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'
apply from: 'jacoco.gradle'

def appId = "com.makingiants.todayhistory"
def appVersionName = "0.1.0"
def appVersionCode = 1

def gitSha() {
  'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
}

android {
  compileSdkVersion setup.targetSdk
  buildToolsVersion setup.buildTools

  signingConfigs {
    debug {
      storeFile file("../debug.keystore")
    }
  }

  defaultConfig {
    applicationId appId
    minSdkVersion setup.minSdk
    targetSdkVersion setup.targetSdk
    versionCode appVersionCode
    versionName appVersionName

    // Add version and build number to apk name
    setProperty("archivesBaseName", "today-${appVersionName}-${appVersionCode}")

    buildConfigField "String", "HOST", "\"http://day-in-history.herokuapp.com\""
    buildConfigField "String", "GIT_SHA", "\"STATIC_FOR_PERFORMANCE\""
    buildConfigField "boolean", "ANALYTICS_ENABLED", "false"
  }
  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.debug

      buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
      buildConfigField "boolean", "ANALYTICS_ENABLED", "true"
    }
  }

  lintOptions {
    abortOnError false
  }

  // Kotlin
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    prod.java.srcDirs += 'src/prod/kotlin'
    mocked.java.srcDirs += 'src/mocked/kotlin'
  }
}

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

kapt {
  generateStubs = true
}

dependencies {
  compile deps.supportAppCompat
  compile deps.supportDesign
  compile deps.supportCardView
  compile deps.supportPalette
  compile deps.kotlinStdLib
  compile project(':api')

  compile deps.dagger
  kapt deps.daggerCompiler
  provided deps.javax

  // Features
  compile deps.picasso
  compile deps.picassoPalette

  // Management
  compile deps.timber
  compile(deps.crashlytics) { transitive = true; }

  testCompile deps.kotlinTest
  testCompile deps.junit
  testCompile deps.mockitoCore
  testCompile(deps.assertJAndroid) {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
}